<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.shop.mapper.ReplyMapper" >
  <resultMap id="BaseResultMap" type="com.shop.domain.Reply" >
    <!--
      WARNING - @mbg.generated
    -->
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="comment_id" property="commentId" jdbcType="BIGINT" />
    <result column="reply_id" property="replyId" jdbcType="BIGINT" />
    <result column="from_openid" property="fromOpenid" jdbcType="VARCHAR" />
    <result column="to_openid" property="toOpenid" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="avatar_url" property="avatarUrl" jdbcType="VARCHAR" />
    <result column="nick_name" property="nickName" jdbcType="VARCHAR" />
    <result column="article_id" property="articleId" jdbcType="BIGINT" />
    <result column="have_read" property="haveRead" jdbcType="INTEGER" />
    <result column="have_reply" property="haveReply" jdbcType="INTEGER" />
    <result column="comment" property="comment" jdbcType="LONGVARCHAR" />
  </resultMap>

  <select id="notReadByOpenId" resultType="com.shop.dto.MessageDto">
    select a.article_id,a.comment_id,a.avatar_url,a.create_time,a.nick_name,a.comment,a.openid,a.have_read,a.reply_id
      from (
        select article_id,id as comment_id,avatar_url,create_time,nick_name,comment,from_openid as openid,0 as reply_id,have_read
        from comment  where to_openid = #{openid}
        union
        select article_id,comment_id,avatar_url,create_time,nick_name,comment,from_openid as openid,id as reply_id,have_read
        from reply where to_openid = #{openid}
        ) as a
        order by a.create_time desc
    </select>

  <update id="haveRead" >
    update reply set have_read = 1 where to_openid = #{openid}
  </update>

  <update id="replyRead" parameterType="java.util.List">
    update reply set have_read = 1 where id in
    <foreach collection="replyIdList" open="(" close=")" item="item" separator="," index="index">
      #{item}
    </foreach>
  </update>

</mapper>